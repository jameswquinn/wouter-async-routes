{"version":3,"sources":["index.js","lazy-wouter.js"],"names":["basepath","PathsContext","createContext","Map","usePaths","useContext","LazySwitch","_ref","children","fallback","react_default","a","createElement","react","Route","_ref2","path","factory","paths","_useRoute","useRoute","matches","Object","slicedToArray","Component","useMemo","lazy","useEffect","set","delete","Link","_ref3","to","props","objectWithoutProperties","prefetch","useCallback","console","log","has","get","fetcher","then","v","wouter","assign","onMouseEnter","useBasepathLocation","_useLocation","useLocation","_useLocation2","location","setLocation","startsWith","slice","length","rootElement","document","getElementById","ReactDOM","render","hook","lazy_wouter_Link","lazy_wouter_LazySwitch","lazy_wouter_Route","Promise","all","__webpack_require__","e","bind"],"mappings":"yHAWgCA,8DCC1BC,EAAeC,wBAAc,IAAIC,KACjCC,EAAW,kBAAMC,qBAAWJ,IAG5BK,EAAa,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,SAAUC,EAAeF,EAAfE,SAC9B,OAAOC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUJ,SAAUA,GAAWD,IAGlCM,EAAQ,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,QACfC,EAAQd,IADqBe,EAEjBC,YAASJ,GAApBK,EAF4BC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAG7BK,EAAYC,kBAAQ,kBAAMC,eAAKT,IAAU,CAACA,IAQhD,OANAU,oBAAU,WAGR,OAFAT,EAAMU,IAAIZ,EAAMC,GAET,kBAAMC,EAAMW,OAAOb,KACzB,CAACE,EAAOF,EAAMC,IAEVI,GAAWX,EAAAC,EAAAC,cAACY,EAAD,OAGdM,EAAO,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,GAAOC,EAAYX,OAAAY,EAAA,EAAAZ,CAAAS,EAAA,QAC3Bb,EAAQd,IACR+B,EAAWC,sBAAY,YAC3BC,QAAQC,IAAI,uBAAwBN,GAEhCd,EAAMqB,IAAIP,KACEd,EAAMsB,IAAIR,EAGxBS,GAAUC,KAAK,SAAAC,GAAC,OAAIA,KAErB,CAACzB,EAAOc,IAEX,OAAOtB,EAAAC,EAAAC,cAACgC,EAAA,EAADtB,OAAAuB,OAAA,CAAOb,GAAIA,GAAQC,EAAnB,CAA0Ba,aAAcX,MDpB3CY,SAhB0B/C,EAiBrB,uBAjBiC,WAAM,IAAAgD,EAChBC,cADgBC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA0B,EAAA,GACzCG,EADyCD,EAAA,GAC/BE,EAD+BF,EAAA,GAahD,MAAO,CATYC,EAASE,WAAWrD,GACnCmD,EAASG,MAAMtD,EAASuD,QACxBJ,EAEWf,sBAAY,SAAAJ,GAAE,OAAIoB,EAAYpD,EAAWgC,IAAK,CAC3DhC,EACAoD,OAkCJ,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOlD,EAAAC,EAAAC,cAzBhB,WACE,OACEF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQiB,KAAMd,GACZrC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkD,EAAD,CAAM9B,GAAG,WAAT,UACAtB,EAAAC,EAAAC,cAACkD,EAAD,CAAM9B,GAAG,WAAT,UACAtB,EAAAC,EAAAC,cAACkD,EAAD,CAAM9B,GAAG,SAAT,SAGFtB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACmD,EAAD,CAAYtD,SAAS,cACnBC,EAAAC,EAAAC,cAACoD,EAAD,CAAOhD,KAAK,UAAUC,QAAS,kBAAMgD,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAA1B,KAAAyB,EAAAE,KAAA,cACrC3D,EAAAC,EAAAC,cAACoD,EAAD,CAAOhD,KAAK,UAAUC,QAAS,kBAAMgD,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAA1B,KAAAyB,EAAAE,KAAA,cACrC3D,EAAAC,EAAAC,cAACoD,EAAD,CAAOhD,KAAK,QAAQC,QAAS,kBAAMgD,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAA1B,KAAAyB,EAAAE,KAAA,oBAUjC,MAASb","file":"static/js/main.ef21e179.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Router } from \"wouter\";\nimport useLocation from \"wouter/use-location\";\nimport { LazySwitch, Route, Link } from \"./lazy-wouter\";\n\nimport \"./styles.css\";\n\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst makeUseBasepathLocation = basepath => () => {\n  const [location, setLocation] = useLocation();\n\n  // could be done with regexp, but requires proper escaping\n  const normalized = location.startsWith(basepath)\n    ? location.slice(basepath.length)\n    : location;\n\n  const setter = useCallback(to => setLocation(basepath + to), [\n    basepath,\n    setLocation\n  ]);\n\n  return [normalized, setter];\n};\n\nconst useBasepathLocation = makeUseBasepathLocation(\n  isProd ? \"/wouter-async-routes\" : \"\"\n);\n\nfunction App() {\n  return (\n    <Router hook={useBasepathLocation}>\n      <section>\n        <nav>\n          <Link to=\"/jquery\">jquery</Link>\n          <Link to=\"/lodash\">lodash</Link>\n          <Link to=\"/antd\">antd</Link>\n        </nav>\n\n        <main>\n          <center>\n            <LazySwitch fallback=\"loading...\">\n              <Route path=\"/jquery\" factory={() => import(\"./pages/jquery\")} />\n              <Route path=\"/lodash\" factory={() => import(\"./pages/lodash\")} />\n              <Route path=\"/antd\" factory={() => import(\"./pages/antd\")} />\n            </LazySwitch>\n          </center>\n        </main>\n      </section>\n    </Router>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","import React, {\n  lazy,\n  Suspense,\n  useEffect,\n  useMemo,\n  useCallback,\n  createContext,\n  useContext\n} from \"react\";\n\nimport { Link as WLink, useRoute } from \"wouter\";\n\nconst PathsContext = createContext(new Map());\nconst usePaths = () => useContext(PathsContext);\n\n// TODO: not an actual switch!\nconst LazySwitch = ({ children, fallback }) => {\n  return <Suspense fallback={fallback}>{children}</Suspense>;\n};\n\nconst Route = ({ path, factory }) => {\n  const paths = usePaths();\n  const [matches] = useRoute(path);\n  const Component = useMemo(() => lazy(factory), [factory]);\n\n  useEffect(() => {\n    paths.set(path, factory);\n\n    return () => paths.delete(path);\n  }, [paths, path, factory]);\n\n  return matches && <Component />;\n};\n\nconst Link = ({ to, ...props }) => {\n  const paths = usePaths();\n  const prefetch = useCallback(() => {\n    console.log(\"try prefetch route: \", to);\n\n    if (paths.has(to)) {\n      let fetcher = paths.get(to);\n\n      // hack for run lazy promise\n      fetcher().then(v => v);\n    }\n  }, [paths, to]);\n\n  return <WLink to={to} {...props} onMouseEnter={prefetch} />;\n};\n\nexport { Link, Route, LazySwitch };\n"],"sourceRoot":""}